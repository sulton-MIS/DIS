@model AI070.Models.WP03004Master.TrainingDTO
@{
    var form_type = ViewBag.form_type;
}

<script type="text/javascript">
    tinymce.init(
        {
            selector: 'textarea',
            width: 800,
            height: 300,
            encoding: 'raw'
        });
</script>

@{

    if (form_type == "New")
    {
        <div class="container">
            <div class="row">
                <div class="col align-right">
                    <button type="button" class="btn btn-danger btn-sm btn-close" id="btn_close" onclick="back()"><i class="fa fa-close"></i></button>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-11 col-sm-11 col-md-11" style="margin-top: -13px; margin-left: 10px;">
                    <label class="control-label text-muted"><h2>@ViewData["Title"]</h2></label>
                </div>
            </div>


            @using (Html.BeginForm("Add", "WP03004", FormMethod.Post, new
            {
                enctype = "multipart/form-data"
            }))
            {

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Training_for, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Training_for, new List<SelectListItem>
                                                    { 
                                                        new SelectListItem{Text="Internal", Value="Internal"},
                                                        new SelectListItem{Text="Eksternal", Value="Eksternal"},
                                                        new SelectListItem{Text="General", Value="General"}
                                                    }, new { @class="form-control" })
                            @Html.ValidationMessageFor(model => model.Training_for, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <p>Select JPEG file to upload (Max total size 500KB)</p>
                            <input type="file" name="File" required />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", rows = "20" } })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary btn-xs" />
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="container">
            <div class="row">
                <div class="col align-right">
                    <button type="button" class="btn btn-danger btn-sm btn-close" id="btn_close" onclick="back()"><i class="fa fa-close"></i></button>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-11 col-sm-11 col-md-11" style="margin-top: -13px; margin-left: 10px;">
                    <label class="control-label text-muted"><h2>@ViewData["Title"]</h2></label>
                </div>
            </div>

            @using (Html.BeginForm("Update", "WP03004", FormMethod.Post, new
            {
                enctype = "multipart/form-data"
            }))
            {

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <p>Select JPEG file to upload (Max total size 500KB)</p>
                            <input type="file" name="File" required />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", rows = "20" } })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary btn-xs" />
                        </div>
                    </div>
                </div>
            }

        </div>
    }
}



